// Variables
$golden-ratio: 1.618;

$checkbox-config: (
  height: 1.3rem,
  width: 2.3rem,
  color: rgb(156 163 175),
  color-active: #808B8D,
  color-checked: #52ab98,
  border: 1.0rem / 6.667,
  text-on: 'On',
  text-off: 'Off',
  transition: all 0.5s ease
);

// Functions
@function check-config($key) {
  @return map-get($checkbox-config, $key);
}

@function power($x, $n) {
    $ret: 1;
    @if $n >= 0 {
        @for $i from 1 through $n {
            $ret: $ret * $x;
        } 
    } @else {
        @for $i from $n to 0 {
            $ret: $ret / $x;
        }
    }
    @return $ret;
}

@function golden-ratio($value: 1, $unit: false) {  
  @return power($golden-ratio, $value)#{if($unit, $unit, '')};
}

// Mixins
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin abs($top: 0, $right: $top, $bottom: $top, $left: $top, $z-index: null) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  @if $z-index != null { z-index: $z-index; }
}

@mixin reset-space($border: false) {
  margin: 0; 
  padding: 0; 
  @if $border { border: 0; }
}

@mixin size($width:auto, $height: auto) {
  width: $width;
  height: $height;
}

// Placeholders
%hide-fake {
  @include size(0);
  @include abs(-9999px, -9999px, null, null);
  overflow: hidden;
}

// Resets
*, *:after, *:before { 
  box-sizing: border-box; 
}

// CHECKBOX STYLES
.checkbox-switch {
  @include clearfix;
  @include reset-space(true);
  
  .checkbox-right {
    float: right;
  }
  
  legend {
    @include reset-space;
    display: block;
    font-weight: 300;
    line-height: check-config(height);
    
    &.legend-left {
      margin: 0 #{$golden-ratio}rem 0 0;
      float: left;
    }
  }
  
  input[type="checkbox"] {
    @extend %hide-fake;
    
    & + label {
      user-select: none;
      line-height: check-config(height);
           
      &:before {
        width: check-config(width);
        height: check-config(height);
        display: inline-block;
        content: 'â€¢';
        transition: check-config(transition);
        text-align: left;
        font-size: 2.25rem;
        line-height: 1rem;
        float: left;
        overflow: hidden;
        color: check-config(color);
        border: check-config(border) solid check-config(color);
        border-radius: check-config(height) / 2;
        margin: auto 0;
      }
      
      // On / Off text
      &:after {
        display: none;
        
      }
    }
 
    // Checked colors
    &:checked + label {
      &:before {
        border-color: check-config(color-checked);
        background: check-config(color-checked);
        text-align: right;
        color: white;
      }
      
      &:after { content: check-config(text-on); }
    }
    
    // Active colors
    &, &:checked {
      & + label:active:before {
        border-color: check-config(color-active);
        background: check-config(color-active);  
        color: white;        
      }
    }
  }
}

fieldset {
  @include reset-space(true);
  padding: 1rem;
  
  legend {
    @include reset-space;
    font-size: 2rem;
    margin-bottom: 1rem;
    font-weight: 300;
    display: block;
  }
}

a {
  text-decoration: none;
  font-weight: 500;
  color: inherit;
  transition: check-config(transition);
  
  &:hover {
    text-decoration: underline;
    color: check-config(color-checked);
  }
}